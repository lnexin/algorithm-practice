package main

import (
	"fmt"
	"math"
)

func main() {
	fmt.Println(maxDifference
		1586))
}

func maxDifference2(s string, k int) int {

	max := 0
	// 子串是要求连续的
	// 获取子串是一个华东窗口的操作
RECUT:
	subCnt := len(s) - k + 1
	for i := 0; i < subCnt; i++ {
		sub := s[i : i+k]
		// 子串
		diff := calcDiff(sub)
		//if max < 0 {
		//	max = diff
		//}
		if diff == 0 {
			continue
		}
		if diff > max || max == 0 {

			max = diff
		}
		//fmt.Println(sub, diff, max)

	}
	if k <= len(s) {
		k++
		goto RECUT
	}
	return max
}

func calcDiff(s string) int {
	cnt := make([]int, 5)
	for _, c := range s {
		cnt[c-'0']++
	}

	a1 := 0
	a2 := 0
	for i := 0; i < 5; i++ {
		count := cnt[i]
		if count == 0 {
			continue
		}
		if count%2 == 1 {
			// 奇数 a1
			a1 = int(math.Max(float64(count), float64(a1)))
		} else {
			// 偶数个, 去最小的
			if a2 == 0 {
				a2 = count
			}
			if count < a2 {
				a2 = count
			}
		}
	}
	if a1 > 0 && a2 > 0 {
		return a1 - a2
	}
	return 0
}
